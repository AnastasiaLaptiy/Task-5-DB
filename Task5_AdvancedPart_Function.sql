USE [FlowerSupplyDB];

/*Функцию, которая проверяет,
 можно ли создать поставку 
 с определенным количеством цветов 
 определенного типа 
 из определённой плантации. 
 Т.е. хватает ли на плантации количества цветов 
 с учетом того, что до того, как поставка закрыта, 
 количество цветов на плантации остается неизменным. 
 После закрытия поставки количество цветов на плантации уменьшается. 
 Входящие параметры: Id вида цветов, Id плантации, количество. Возвращаемое значение в формате true/false.
*/

/* > т.е. предполагается, что у нас уже заполнено хотя бы поле IdSupply?
 > если это сказано просто для понимания, то ок, а если это надо учитывать, то, чтобы понять закрыта ли поставка нам на вход нужен ее  IdSupply
 > опять же, если мы проверили, что можно создать поставку и вставили новую запись, 
	получили айди и все остальные параметры, то я бы лучше создала отдельную функцию для этого,
	потому что будет заморочно проверять важные параметры с кучей ограничений, 
	которые не относятся к проверке"возможна ли поставка с таким кол-вом цветов"
 > просто для проверки тру/фолс нам не нужно тут учитывать закрыта ли поставка, 
   поскольку для тех, которые уже закрыты (с них итак уже кол-во цветов списалось), а те которые еще есть на плантации мы и проверим как раз
 > другое дело, если мы сразу знаем IdSupply и проверяем закрыта ли она, то да, так имеет смысл*/

-- DROP FUNCTION IF EXISTS [dbo].[isFlowerSupplyReal];

GO
CREATE FUNCTION [dbo].[isFlowerSupplyReal](
	@IdFlower INT,
	@IdPlantation INT,
	@Amount INT
	)
	RETURNS BIT	
		AS 
		BEGIN
		DECLARE @Result BIT = 0
		DECLARE @ErrorMsg VARCHAR(30)
			IF EXISTS (
				SELECT * 					
					FROM
					[FlowerSupplyDB].[dbo].[PlantationFlower] [pl],
					[FlowerSupplyDB].[dbo].[Plantation] [p],
					[FlowerSupplyDB].[dbo].[Flower] [f]
						WHERE
						[pl].[FlowerId] = [f].[Id]
					and [pl].[PlantationId] = [p].[Id]
					and [pl].[PlantationId] = @IdPlantation
					and [pl].[FlowerId] = @IdFlower
					and [pl].[Amount] >= @Amount)
					 BEGIN
						SELECT @Result = 1
					 END
			ELSE
				BEGIN
					SET @ErrorMsg=CONCAT(
					'Can`t add supply with ',
					(SELECT @Amount),
					' Flower - ', 
					(SELECT [f].[Name] FROM [FlowerSupplyDB].[dbo].[Flower] [f] WHERE [f].[Id] = @IdFlower),
					' from Plantation - ',
					(SELECT [p].[Name] FROM [FlowerSupplyDB].[dbo].[Plantation] [p] WHERE [p].[Id] = @IdPlantation)
					);
				END
	RETURN @Result
END;
GO

/*Test*/

SELECT [dbo].[isFlowerSupplyReal](5,3,15); --0


SELECT [dbo].[isFlowerSupplyReal](1,1,200); --1